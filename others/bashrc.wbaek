
#export SVN_EDITOR=vim
alias ls='ls -G -A --color=auto'
alias ll='ls -lh'
alias grep='grep --color=auto'

alias ci='cd `echo $PWD/ | sed -e "s/\/include\//\/include\//g" -e "s/\/src\//\/include\//g" -e "s/\/test\//\/include\//g"`'
alias cm='cd `echo $PWD/ | sed -e "s/\/include\/.*//g" -e "s/\/src\/.*//g" -e "s/\/test\/.*//g"`'
alias cs='cd `echo $PWD/ | sed -e "s/\/include\//\/src\//g" -e "s/\/src\//\/src\//g" -e "s/\/test\//\/src\//g"`'
alias ct='cd `echo $PWD/ | sed -e "s/\/include\//\/test\//g" -e "s/\/src\//\/test\//g" -e "s/\/test\//\/test\//g"`'

#-------------------------------------------------------------
# Color definitions (taken from Color Bash Prompt HowTo).
#-------------------------------------------------------------

# Normal Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

NC="\e[m"               # Color Reset

#-------------------------------------------------------------
# ref : http://tldp.org/LDP/abs/html/sample-bashrc.html
# Shell Prompt - for many examples, see:
#       http://www.debian-administration.org/articles/205
#       http://www.askapache.com/linux/bash-power-prompt.html
#       http://tldp.org/HOWTO/Bash-Prompt-HOWTO
#       https://github.com/nojhan/liquidprompt
#-------------------------------------------------------------
# Current Format: [TIME USER@HOST PWD] >
# USER:
#    Cyan      == normal user
#    Orange    == SU to user
#    Red       == root
# HOST:
#    Cyan      == local session
#    Green     == secured remote connection (via ssh)
#    Red       == unsecured remote connection
# PWD:
#    Green     == more than 10% free disk space
#    Orange    == less than 10% free disk space
#    ALERT     == less than 5% free disk space
#    Red       == current user does not have write privileges
#    Cyan      == current filesystem is size zero (like /proc)
# >:
#    White     == no background or suspended jobs in this shell
#    Cyan      == at least one background job in this shell
#    Orange    == at least one suspended job in this shell
#
#    Command is added to the history file each time you hit enter,
#    so it's available to all shells (using 'history -a').

# Test connection type:
if [ -n "${SSH_CONNECTION}" ]; then
    CNX=${Green}        # Connected on remote machine, via ssh (good).
#elif [[ "${DISPLAY%%:0*}" != "" ]]; then
#    CNX=${ALERT}        # Connected on remote machine, not via ssh (bad).
else
    CNX=${BWhite}        # Connected on local machine.
fi

# Test user type:
if [[ ${USER} == "root" ]]; then
    SU=${Red}           # User is root.
elif [[ ${USER} != $(logname) ]]; then
    SU=${BRed}          # User is not login user.
else
    SU=${BWhite}         # User is normal (well ... most of us are).
fi

# Returns a color according to running/suspended jobs.
function job_color()
{
    if [ $(jobs -s | wc -l) -gt "0" ]; then
        echo -en ${BRed}
    elif [ $(jobs -r | wc -l) -gt "0" ] ; then
        echo -en ${BCyan}
    fi
}

# Git branch in prompt.
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Now we construct the prompt.
PROMPT_COMMAND="history -a"
case ${TERM} in
    *term* | rxvt | linux)
        PS1=""
        # User@Host (with connection type info):
        PS1=${PS1}"\[${SU}\]\u\[${NC}\]@\[${CNX}\]\h\[${NC}\] "
#        PS1=${PS1}"\[${SU}\]\u\[${NC}\] "
        # PWD (full path \w, current path \W)
        PS1=${PS1}"\[${Green}\]\w]\[${NC}\]"
        # Git branch
        PS1=${PS1}"\[${Purple}\]\$(parse_git_branch)\[${NC}\] "
        # Prompt (with 'job' info):
        PS1=${PS1}"\[$(job_color)\]>\[${NC}\] "
        ;;
    *)
        PS1="(\A \u@\h \W) > " # --> PS1="(\A \u@\h \w) > "
        # --> Shows full pathname of current dir.
        ;;
esac

